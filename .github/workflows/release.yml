name: Release process

on:
  release:
    types: [ published ]

jobs:
  deb12:
    name: Debian 12 release package building
    runs-on: ubuntu-latest
    container: debian:bookworm
    steps:
      
      - name: Calculate version from ${{github.ref}}
        env:
          PKG_TAG: ${{github.ref}}
        shell: bash
        run: echo "tag=$(echo ${PKG_TAG#refs/tags/})" >> $GITHUB_OUTPUT
        id: extract_tag

      - run: apt update
      - name: install aux deps
        run: apt -y --no-install-recommends install git ca-certificates curl gnupg ruby gpg gpg-agent make devscripts

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: update changelog
        run: > 
          rm debian/changelog && 
          dch --create --package yeti-cli --newversion "${{steps.extract_tag.outputs.tag}}" --distribution bookworm "Release: ${{steps.extract_tag.outputs.tag}}, commit: ${{github.ref}}"

      - name: install build-deps
        run: apt -y --no-install-recommends build-dep .

      - name: Build package
        run: make package

      - name: Save deb package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb12-package
          path: /__w/yeti-cli/*.deb

      - uses: yeti-switch/upload-debian-pkg-action@v2
        with:
          pkgs: '../*.deb'
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          s3_codename: bookworm
          s3_access_key_id: ${{ secrets.DEB_AWS_ACCESS_KEY_ID }}
          s3_secret_access_key: ${{ secrets.DEB_AWS_SECRET_ACCESS_KEY }}
          s3_endpoint_url: ${{ secrets.DEB_AWS_ENDPOINT }}
          s3_prefix: '1.14'

  deb13:
    name: Debian 13 release package building
    runs-on: ubuntu-latest
    container: debian:trixie
    steps:
      
      - name: Calculate version from ${{github.ref}}
        env:
          PKG_TAG: ${{github.ref}}
        shell: bash
        run: echo "tag=$(echo ${PKG_TAG#refs/tags/})" >> $GITHUB_OUTPUT
        id: extract_tag

      - run: apt update
      - name: install aux deps
        run: apt -y --no-install-recommends install git ca-certificates curl gnupg ruby gpg gpg-agent make devscripts

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: update changelog
        run: > 
          rm debian/changelog && 
          dch --create --package yeti-cli --newversion "${{steps.extract_tag.outputs.tag}}" --distribution bookworm "Release: ${{steps.extract_tag.outputs.tag}}, commit: ${{github.ref}}"

      - name: install build-deps
        run: apt -y --no-install-recommends build-dep .

      - name: Build package
        run: make package

      - name: Save deb package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb13-package
          path: /__w/yeti-cli/*.deb

      - uses: yeti-switch/upload-debian-pkg-action@v2
        with:
          pkgs: '../*.deb'
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          s3_codename: trixie
          s3_access_key_id: ${{ secrets.DEB_AWS_ACCESS_KEY_ID }}
          s3_secret_access_key: ${{ secrets.DEB_AWS_SECRET_ACCESS_KEY }}
          s3_endpoint_url: ${{ secrets.DEB_AWS_ENDPOINT }}
          s3_prefix: '1.14'

  deb13_container:
    name: Debian 13 release container
    needs: deb13
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: deb13-package

      - name: Display structure of downloaded files
        run: ls -la

      - name: Display path
        run: pwd

      - name: Calculate version from ${{github.ref}}
        env:
          PKG_TAG: ${{github.ref}}
        shell: bash
        run: echo "tag=$(echo ${PKG_TAG#refs/tags/})" >> $GITHUB_OUTPUT
        id: extract_tag

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ci/ssh-image-trixie.Dockerfile
          push: true
          tags: ghcr.io/yeti-switch/yeti-cli/ssh:${{steps.extract_tag.outputs.tag}}

